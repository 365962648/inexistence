#!/bin/bash
#
# https://github.com/Aniverse/inexistence
# Author: Aniverse

script_update=2019.07.17
script_version=r10002

################################################################################################ Debug

usage_for_debug() {
    export local_packages=/etc/inexistence/00.Installation
    export s=$local_packages/package/mono/install
    rm -f $s ; nano $s ; bash $s
    bash <(wget -qO- https://github.com/Aniverse/inexistence/raw/master/00.Installation/package/mono/install)
}

################################################################################################ Get options

unset AppName AppNameLower Need_SourceCode pm_action \
      LogRootPath LogTimes DebLocation SCLocation LOCKLocation OutputLOG

function show_usage() { echo " Invalid option $1
Usage:
      -v        Specifiy which version to be installed
      -l        Specifiy LogBase
      -d        Enable debug mode
"
exit 1 ; }

OPTS=$(getopt -o v:l:d -al version:,debug,logbase: -- "$@")
[ ! $? = 0 ] && show_usage
eval set -- "$OPTS"

while [ -n "$1" ] ; do case "$1" in
    -v | --version      ) version="$2"  ; shift 2 ;;
    -l | --logbase      ) LogTimes="$2" ; shift 2 ;;
    -d | --debug        ) debug=1       ; shift   ;;
    -- ) shift ; break ;;
esac ; done

################################################################################################ Set Variables

AppName=mono
AppNameLower=mono
Need_SourceCode=no
pm_action=install

if [[ -f /etc/inexistence/00.Installation/function ]]; then
    source /etc/inexistence/00.Installation/function
else
    wget -qO /tmp/function https://github.com/Aniverse/inexistence/raw/master/00.Installation/function
    source /tmp/function
fi

set_variables_log_location
[[ $debug == 1 ]] && debug_log_location

################################################################################################





# http://www.mono-project.com/download/stable/#download-lin
# https://download.mono-project.com/sources/mono/
# http://www.mono-project.com/docs/compiling-mono/compiling-from-git/
# https://github.com/liaralabs/swizzin/blob/master/sources/functions/mono

function install_mono() {

    echo >> $OutputLOG

    if [[ $DISTRO == Ubuntu ]]; then
        apt-key --keyring /etc/apt/trusted.gpg.d/mono-xamarin.gpg adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF >> $OutputLOG 2>&1
    elif [[ $DISTRO == Debian ]]; then
        if [[ $CODENAME == jessie ]]; then
            apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF >> $OutputLOG 2>&1
            wget -O libjpeg8.deb http://ftp.fr.debian.org/debian/pool/main/libj/libjpeg8/libjpeg8_8d-1+deb7u1_amd64.deb >> $OutputLOG 2>&1
            dpkg -i libjpeg8.deb >> $OutputLOG 2>&1
            rm -f libjpeg8.deb
        else
            apt-key --keyring /etc/apt/trusted.gpg.d/mono-xamarin.gpg adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF >> $OutputLOG 2>&1
        fi
    fi

  # [[ $CODENAME != buster ]] && 
  # echo "deb https://download.mono-project.com/repo/$DISTROL $CODENAME/snapshots/5.18/. main" > /etc/apt/sources.list.d/mono.list
    echo "deb http://download.mono-project.com/repo/$DISTROL stable-$CODENAME main" > /etc/apt/sources.list.d/mono.list

    apt-get update >> $OutputLOG 2>&1
    apt-get install -y mono-complete ca-certificates-mono >> $OutputLOG 2>&1

    status_lock=$AppNameLower
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
    which mono > /dev/null && touch /tmp/$status_lock.1.lock || touch /tmp/$status_lock.2.lock
    [[ -f /tmp/$status_lock.1.lock ]] && touch $LOCKLocation/$AppNameLower.lock
    echo >> $OutputLOG

}





echo -ne "Installing $AppName ..." | tee -a $OutputLOG
install_mono & spinner $!
check_status $status_lock | tee -a $OutputLOG
