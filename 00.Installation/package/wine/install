#!/bin/bash
#
# https://github.com/Aniverse/inexistence
# Author: Aniverse

script_update=2020.01.14
script_version=r10002

################################################################################################ Debug

usage_for_debug() {
    export local_packages=/etc/inexistence/00.Installation
    export s=$local_packages/package/wine/install
    rm -f $s ; nano $s ; bash $s
    bash <(wget -qO- https://github.com/Aniverse/inexistence/raw/master/00.Installation/package/wine/install)
}

################################################################################################ Get options

unset AppName AppNameLower Need_SourceCode pm_action \
      LogRootPath LogTimes DebLocation SCLocation LOCKLocation OutputLOG

function show_usage() { echo " Invalid option $1
Usage:
      -v        Specifiy which version to be installed
      -l        Specifiy LogBase
      -d        Enable debug mode
"
exit 1 ; }

OPTS=$(getopt -o v:l:d -al version:,debug,logbase: -- "$@")
[ ! $? = 0 ] && show_usage
eval set -- "$OPTS"

while [ -n "$1" ] ; do case "$1" in
    -v | --version      ) version="$2"  ; shift 2 ;;
    -l | --logbase      ) LogTimes="$2" ; shift 2 ;;
    -d | --debug        ) debug=1       ; shift   ;;
    -- ) shift ; break ;;
esac ; done

################################################################################################ Set Variables

AppName=wine
AppNameLower=wine
Need_SourceCode=no
pm_action=install

if [[ -f /etc/inexistence/00.Installation/function ]]; then
    source /etc/inexistence/00.Installation/function
else
    wget -qO /tmp/function https://github.com/Aniverse/inexistence/raw/master/00.Installation/function
    source /tmp/function
fi

set_variables_log_location
[[ $debug == 1 ]] && debug_log_location

################################################################################################





# https://wiki.winehq.org/Debian

function install_wine() {

    echo >> $OutputLOG

    dpkg --add-architecture i386 >> $OutputLOG 2>&1
  # wget -O- https://dl.winehq.org/wine-builds/Release.key | apt-key add - >> $OutputLOG
  # apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 76F1A20FF987672F >> $OutputLOG
    wget https://dl.winehq.org/wine-builds/winehq.key -O winehq.key >> $OutputLOG 2>&1
    apt-key add winehq.key >> $OutputLOG 2>&1
    rm -f winehq.key

  # if [[ $DISTRO == Ubuntu ]]; then
  #     apt-add-repository -y https://dl.winehq.org/wine-builds/ubuntu/ >> $OutputLOG 2>&1
  # elif [[ $DISTRO == Debian ]]; then
    [[ $CODENAME != focal ]] &&
        echo "deb https://dl.winehq.org/wine-builds/$DISTROL/ $CODENAME main" > /etc/apt/sources.list.d/wine.list
  # fi

    apt-get update >> $OutputLOG 2>&1
    apt_install winehq-stable >> $OutputLOG 2>&1       # --install-recommends

    wget -nv -N https://raw.githubusercontent.com/Winetricks/winetricks/master/src/winetricks -O /usr/local/bin/winetricks >> $OutputLOG 2>&1
    chmod 755 /usr/local/bin/winetricks >> $OutputLOG 2>&1

    status_lock=$AppNameLower
    echo "status_lock=$status_lock" > /tmp/Variables
    rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
    which wine > /dev/null && touch /tmp/$status_lock.1.lock || touch /tmp/$status_lock.2.lock
    [[ -f /tmp/$status_lock.1.lock ]] && touch $LOCKLocation/$AppNameLower.lock
    echo >> $OutputLOG

}





echo -ne "Installing $AppName ..." | tee -a $OutputLOG
install_wine & spinner $!
check_status $status_lock | tee -a $OutputLOG
