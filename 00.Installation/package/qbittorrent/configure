#!/bin/bash
#
# https://github.com/Aniverse/inexistence
# Author: Aniverse
#
script_update=2019.07.10
script_version=r11005

usage_guide() {
bash /etc/inexistence/00.Installation/package/qbittorrent/configure -u $iUser -p $iPass -w 2017 -i 9002
}
################################################################################################ Get options

OPTS=$(getopt -n "$0" -o u:p:w:i:h: --long "username:,password:,home:,wport:,iport:,logbase:" -- "$@")
eval set -- "$OPTS"
while true; do
  case "$1" in
    -u | --username ) iUser="$2"    ; shift 2 ;;
    -p | --password ) iPass="$2"    ; shift 2 ;;
    -h | --home     ) iHome="$2"    ; shift 2 ;;
    -w | --wport    ) wPort="$2"    ; shift 2 ;;
    -i | --iport    ) iPort="$2"    ; shift 2 ;;
         --logbase  ) LogTimes="$2" ; shift 2 ;;
    -- ) shift; break ;;
     * ) break ;;
  esac
done

[[ -z $iUser || -z $iPass ]] && { echo -e "Please specify username and password" ; exit 1 ; }
[[ -z $iHome ]] && [[ $iUser == root ]] && iHome=/root
[[ -z $iHome ]] && [[ $iUser != root ]] && iHome=/home/$iUser
[[ -z $wPort ]] && wPort=2017
[[ -z $iPort ]] && iPort=9002
#[[ $lang == eng ]] && qbt_language=en
[[ -z $qbt_language ]] && qbt_language=zh
source /etc/inexistence/00.Installation/function --output $LogTimes

LogRootPath=/log/inexistence
[[ -z $LogTimes ]] && LogTimes=$LogRootPath/single
OutputLOG=$LogTimes/configure/qbittorrent.txt

################################################################################################

cat > /etc/systemd/system/qbittorrent@.service << EOF
[Unit]
Description=qBittorrent Daemon Service
After=network.target

[Service]
#UMask=000
Type=forking
User=%I
LimitNOFILE=infinity
ExecStart=/usr/bin/qbittorrent-nox -d
#ExecStop=/usr/bin/killall -w -s 9 /usr/bin/qbittorrent-nox
Restart=on-failure
TimeoutSec=300

[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reload

################################################################################################

function configure_qbittorrent() {

echo >> $OutputLOG

[[ -d $iHome/.config/qBittorrent ]] && {
mv $iHome/.config/qBittorrent $iHome/.config/qBittorrent.old.$times
rm -rf mv $iHome/.config/qBittorrent ; }

mkdir -p $iHome/qbittorrent/{download,torrent,watch} $iHome/.config/qBittorrent
chmod -R 755 $iHome/.config/qBittorrent
chown -R $iUser.$iUser $iHome/qbittorrent $iHome/.config/qBittorrent

cp $local_packages/package/qbittorrent/qb /usr/local/bin
chmod 755 /usr/local/bin/qb

qbPass=$(echo -n $iPass | md5sum | cut -f1 -d ' ')
cat > $iHome/.config/qBittorrent/qBittorrent.conf << EOF
[Application]
FileLogger\Enabled=true
FileLogger\Age=6
FileLogger\DeleteOld=true
FileLogger\Backup=true
FileLogger\AgeType=1
FileLogger\Path=$iHome/.config/qBittorrent
FileLogger\MaxSize=20

[LegalNotice]
Accepted=true

[Preferences]
Bittorrent\AddTrackers=false
Bittorrent\DHT=false
Bittorrent\Encryption=1
Bittorrent\LSD=false
Bittorrent\MaxConnecs=-1
Bittorrent\MaxConnecsPerTorrent=-1
Bittorrent\MaxRatioAction=0
Bittorrent\PeX=false
Bittorrent\uTP=false
Bittorrent\uTP_rate_limited=true
Connection\GlobalDLLimitAlt=0
Connection\GlobalUPLimitAlt=0
Connection\PortRangeMin=$iPort
Downloads\SavePath=$iHome/qbittorrent/download
Downloads\TorrentExportDir=$iHome/qbittorrent/torrent
General\Locale=$qbt_language
Queueing\QueueingEnabled=false
WebUI\CSRFProtection=false
WebUI\Port=$wPort
WebUI\Password_ha1=@ByteArray($qbPass)
WebUI\Username=$iUser
EOF

systemctl enable qbittorrent@$iUser >> $OutputLOG 2>&1
systemctl start qbittorrent@$iUser
[[ -d /var/www/h5ai ]] && ln -s $iHome/qbittorrent/download /var/www/h5ai/$iUser/qbittorrent

status_lock=qbt-config
rm -f /tmp/$status_lock.1.lock /tmp/$status_lock.2.lock 
ps --user $iUser | grep qbittorrent-nox -q && touch $LOCKLocation/rclone.lock || touch /tmp/$status_lock.2.lock
echo >> $OutputLOG
}




echo -ne "Configurating qBittorrent ..." | tee -a $OutputLOG
configure_qbittorrent & spinner $!
check_status qbt-config
